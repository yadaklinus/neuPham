// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client_ {
  provider = "prisma-client-js"
  output   = "./generated/online"
}

// Offline database (SQLite) - Main database
datasource db_ {
  provider = "postgresql"
  url      = env("DATABASE_URL_ONLINE")
}

enum mode_online {
  dark
  light
}

enum role_online {
  admin
  sales
  purchase
}

enum unit_online {
  kg
  piece
  liter
  meter
}

enum type_online {
  COMPANY
  INDIVIDUAL
  GOVERNMENT
  NON_PROFIT
  retal
  wholesale
}

model superAdmin_online {
  id           String    @id @default(uuid())
  userName     String
  email        String    @unique
  password     String
  role         String
  lastLogin    DateTime?
  warehousesId String?
  sync         Boolean   @default(false) // Sync field
  syncedAt     DateTime? // When last synced
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  isDeleted    Boolean   @default(false)
}

model users_online {
  id                  String             @id @default(uuid())
  email               String
  userName            String             @unique
  phoneNumber         String
  password            String
  role                role_online
  lastLogin           DateTime?
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  sync                Boolean            @default(false) // Sync field
  syncedAt            DateTime? // When last synced
  Warehouses_online   Warehouses_online? @relation(fields: [warehouses_onlineId], references: [warehouseCode])
  warehouses_onlineId String?
  isDeleted           Boolean            @default(false)
}

model Settings_online {
  setting_id      Int         @id
  companyName     String
  companyEmail    String
  phoneNumber     String
  websiteURL      String
  address         String
  logoUrl         String
  defaultCurrency String
  taxRate         Int
  mode            mode_online
  itermsPerPage   Int
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  sync            Boolean     @default(false) // Sync field
  syncedAt        DateTime? // When last synced
  isDeleted       Boolean     @default(false)
}

model Warehouses_online {
  id              String                   @id @default(uuid())
  warehouseCode   String                   @unique
  name            String
  phoneNumber     String
  email           String
  description     String?
  address         String
  users           users_online[]
  products        Product_online[]
  customer        Customer_online[]
  saleItem        SaleItem_online[]
  sale            Sale_online[]
  paymentMethod   PaymentMethod_online[]
  purchase        Purchase_online[]
  purchaseItem    PurchaseItem_online[]
  supplier        Supplier_online[]
  receiptSettings ReceiptSettings_online[]
  balancePayment  BalancePayment_online[]
  quotation       Quotation_online[]
  quotationItem   QuotationItem_online[]
  balanceTransaction  BalanceTransaction_online[]
  sync            Boolean                  @default(false) // Sync field
  syncedAt        DateTime? // When last synced
  isDeleted       Boolean                  @default(false)
}

model Sale_online {
  id                  String                  @id @default(cuid())
  saleItems           SaleItem_online[]
  subTotal            Float
  notes               String?
  amountPaid          Float?
  taxRate             Float
  grandTotal          Float
  paidAmount          Float
  balance             Float
  createdAt           DateTime                @default(now())
  updatedAt           DateTime                @updatedAt
  invoiceNo           String                  @unique
  paymentMethod       PaymentMethod_online[]
  balancePayment      BalancePayment_online[]
  sync                Boolean                 @default(false) // Sync field
  syncedAt            DateTime? // When last synced
  Warehouses_online   Warehouses_online?      @relation(fields: [warehouses_onlineId], references: [warehouseCode])
  warehouses_onlineId String?
  Customer_online     Customer_online?        @relation(fields: [customer_onlineId], references: [id])
  customer_onlineId   String?
  isDeleted           Boolean                 @default(false)
}

model SaleItem_online {
  id String @id @default(cuid())

  productName   String
  cost          Float
  selectedPrice Float
  priceType     String
  quantity      Int
  discount      Float
  total         Float
  profit        Float

  sync     Boolean   @default(false) // Sync field
  syncedAt DateTime? // When last synced

  Warehouses_online   Warehouses_online? @relation(fields: [warehouses_onlineId], references: [warehouseCode])
  warehouses_onlineId String?
  Sale_online         Sale_online?       @relation(fields: [sale_onlineId], references: [invoiceNo])
  sale_onlineId       String?
  Customer_online     Customer_online?   @relation(fields: [customer_onlineId], references: [id])
  customer_onlineId   String?
  Product_online      Product_online?    @relation(fields: [product_onlineId], references: [id])
  product_onlineId    String?
  isDeleted           Boolean            @default(false)
}

model Purchase_online {
  id                  String                @id @default(cuid())
  purchaseItem        PurchaseItem_online[]
  taxRate             Float
  subTotal            Float
  notes               String?
  amountPaid          Float?
  grandTotal          Float
  paidAmount          Float
  balance             Float
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  referenceNo         String                @unique
  sync                Boolean               @default(false) // Sync field
  syncedAt            DateTime?
  Warehouses_online   Warehouses_online?    @relation(fields: [warehouses_onlineId], references: [warehouseCode])
  warehouses_onlineId String?
  Supplier_online     Supplier_online?      @relation(fields: [supplier_onlineId], references: [id])
  supplier_onlineId   String?
  isDeleted           Boolean               @default(false)
}

model PurchaseItem_online {
  id                   String    @id @default(cuid())
  productId            String?
  cost                 Float
  selectedPrice        Float
  productName          String?
  priceType            String
  quantity             Int
  discount             Float
  total                Float
  profit               Float
  sync                 Boolean   @default(false) // Sync field
  syncedAt             DateTime? // When last synced
  customRetailPrice    Float?
  customWholesalePrice Float?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  Warehouses_online   Warehouses_online? @relation(fields: [warehouses_onlineId], references: [warehouseCode])
  warehouses_onlineId String?
  Purchase_online     Purchase_online?   @relation(fields: [purchase_onlineId], references: [referenceNo])
  purchase_onlineId   String?
  Product_online      Product_online?    @relation(fields: [product_onlineId], references: [id])
  product_onlineId    String?
  isDeleted           Boolean            @default(false)
}

model Customer_online {
  id                  String                  @id @default(uuid())
  name                String
  type                String
  companyName         String?
  email               String?
  address             String?
  phone               String
  accountBalance      Float               @default(0)
  Sale                Sale_online[]
  saleItem            SaleItem_online[]
  balancePayment      BalancePayment_online[]
  quotation           Quotation_online[]
  balanceTransaction  BalanceTransaction_online[]
  createdAt           DateTime                @default(now())
  updatedAt           DateTime                @updatedAt
  sync                Boolean                 @default(false) // Sync field
  syncedAt            DateTime? // When last synced
  Warehouses_online   Warehouses_online?      @relation(fields: [warehouses_onlineId], references: [warehouseCode])
  warehouses_onlineId String?
  isDeleted           Boolean                 @default(false)
}

model BalanceTransaction_online {
  id           String      @id @default(uuid())
  customerId   String
  customer     Customer_online    @relation(fields: [customerId], references: [id])
  amount       Float
  type         String      // CREDIT or DEBIT
  description  String
  paymentMethod String?    // cash, card, bank_transfer, mobile_money
  reference    String?     // Transaction reference
  saleId       String?     // If related to a sale
  balanceAfter Float       // Balance after this transaction
  Warehouses_online   Warehouses_online?      @relation(fields: [warehouses_onlineId], references: [warehouseCode])
  warehouses_onlineId String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  sync         Boolean     @default(false)
  syncedAt     DateTime?
  isDeleted    Boolean     @default(false)
}

model Supplier_online {
  id                  String             @id @default(uuid())
  name                String
  type                String
  companyName         String?
  email               String
  address             String
  phone               String
  purchase            Purchase_online[]
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  sync                Boolean            @default(false) // Sync field
  syncedAt            DateTime? // When last synced
  Warehouses_online   Warehouses_online? @relation(fields: [warehouses_onlineId], references: [warehouseCode])
  warehouses_onlineId String?
  isDeleted           Boolean            @default(false)
}

model Product_online {
  id                  String                 @id @default(uuid())
  name                String
  barcode             String
  wholeSalePrice      Float
  retailPrice         Float
  cost                Float
  quantity            Int
  taxRate             Int
  unit                unit_online
  description         String
  SaleItem            SaleItem_online[]
  purchaseItem        PurchaseItem_online[]
  quotationItem       QuotationItem_online[]
  createdAt           DateTime               @default(now())
  updatedAt           DateTime               @updatedAt
  sync                Boolean                @default(false) // Sync field
  syncedAt            DateTime? // When last synced
  Warehouses_online   Warehouses_online?     @relation(fields: [warehouses_onlineId], references: [warehouseCode])
  warehouses_onlineId String?
  isDeleted           Boolean                @default(false)
}

model PaymentMethod_online {
  id                  String             @id @default(uuid())
  method              String
  amount              Int
  // notes        String?
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  sync                Boolean            @default(false) // Sync field
  syncedAt            DateTime? // When last synced
  Warehouses_online   Warehouses_online? @relation(fields: [warehouses_onlineId], references: [warehouseCode])
  warehouses_onlineId String?
  Sale_online         Sale_online?       @relation(fields: [sale_onlineId], references: [invoiceNo])
  sale_onlineId       String?
  isDeleted           Boolean            @default(false)
}

model ReceiptSettings_online {
  id           String @id @default(uuid())
  companyName  String
  businessName String
  address      String
  city         String
  state        String
  country      String
  phone        String
  email        String
  website      String

  // Receipt Configuration
  receiptTitle    String?
  headerMessage   String?
  footerMessage   String?
  showLogo        Boolean? @default(true)
  logoUrl         String?
  showQrCode      Boolean? @default(true)
  qrCodeContent   String?  @default("website")
  customQrContent String?

  // Display Options
  showCustomerInfo     Boolean? @default(true)
  showCashierInfo      Boolean? @default(true)
  showItemCodes        Boolean? @default(true)
  showItemDescriptions Boolean? @default(true)
  showTaxBreakdown     Boolean? @default(true)
  showPaymentMethods   Boolean? @default(true)
  showBalance          Boolean? @default(true)
  showTimestamp        Boolean? @default(true)
  use24HourFormat      Boolean? @default(false)
  showItemNumbers      Boolean? @default(true)
  showRunningTotal     Boolean? @default(false)

  // Format Settings
  paperSize    String? @default("80mm")
  fontSize     String? @default("normal")
  printDensity String? @default("normal")
  lineSpacing  String? @default("normal")

  // Branding
  primaryColor String? @default("#000000")
  accentColor  String? @default("#666666")
  fontFamily   String? @default("monospace")

  // Additional Settings
  printCopyCount   Int?     @default(1)
  autoPrint        Boolean? @default(false)
  language         String?  @default("en")
  currency         String?  @default("NGN")
  currencySymbol   String?  @default("₦")
  currencyPosition String?  @default("before")

  Warehouses_online   Warehouses_online? @relation(fields: [warehouses_onlineId], references: [warehouseCode])
  warehouses_onlineId String             @unique

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sync      Boolean   @default(false) // Sync field
  syncedAt  DateTime? // When last synced
  isDeleted Boolean   @default(false)
}

model BalancePayment_online {
  id            String             @id @default(uuid())
  customerId    String
  customer      Customer_online    @relation(fields: [customerId], references: [id])
  saleId        String?
  sale          Sale_online?       @relation(fields: [saleId], references: [invoiceNo])
  amount        Float
  paymentMethod String
  receiptNo     String             @unique
  notes         String?
  warehousesId  String?
  warehouses    Warehouses_online? @relation(fields: [warehousesId], references: [warehouseCode])
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  sync          Boolean            @default(false) // Sync field
  syncedAt      DateTime? // When last synced
  isDeleted     Boolean            @default(false)
}

model Quotation_online {
  id               String                 @id @default(cuid())
  quotationItems   QuotationItem_online[]
  selectedCustomerId String? // reference to Customer
  selectedCustomer Customer_online?       @relation(fields: [selectedCustomerId], references: [id])
  taxRate          Float
  subTotal         Float
  notes            String?
  grandTotal       Float
  validUntil       DateTime? // Quotation expiry date
  status           String                 @default("pending") // pending, accepted, rejected, converted
  convertedToSaleId String? // If converted to sale, reference to Sale
  createdAt        DateTime               @default(now())
  updatedAt        DateTime               @updatedAt
  warehousesId     String?
  warehouses       Warehouses_online?     @relation(fields: [warehousesId], references: [warehouseCode])
  quotationNo      String                 @unique
  sync             Boolean                @default(false) // Sync field
  syncedAt         DateTime? // When last synced
  isDeleted        Boolean                @default(false)
}

model QuotationItem_online {
  id            String             @id @default(cuid())
  quotationId   String?
  quotation     Quotation_online?  @relation(fields: [quotationId], references: [quotationNo])
  productId     String?
  product       Product_online?    @relation(fields: [productId], references: [id])
  productName   String
  cost          Float
  selectedPrice Float
  priceType     String
  quantity      Int
  discount      Float
  total         Float
  warehouses    Warehouses_online? @relation(fields: [warehousesId], references: [warehouseCode])
  warehousesId  String?
  sync          Boolean            @default(false) // Sync field
  syncedAt      DateTime? // When last synced
  isDeleted     Boolean            @default(false)
}